[core]
    abbrev = 12
[credential]
    helper = cache
[push]
    default = simple
[difftool]
    prompt = false
[pretty]
    fixes = Fixes: %h (\"%s\")
[alias]
    re = reset --hard
    ar = archive --format tgz -v -o /tmp/git.tgz  HEAD:
    ci = commit
    undo = reset --hard
    llog = log --date=local
    cp1 = !read -p \"Enter the message for commit :: \" msg && git add -A . && git commit -a -m \"$msg\" && git push
    gg = log --oneline --abbrev-commit --all --graph --decorate --color
    cp = !git add -A . && git commit -a && git push && git push --tags 
    cpp = !git add -A . && git commit -a && git push && git push --tags  && git push aka && git push aka --tags
    lc = log ORIG_HEAD.. --stat --no-merges
    undo=reset --hard
    changes=diff --name-status -r
    diffstat=diff --stat -r
    gitkconflict = !gitk --left-right HEAD...MERGE_HEAD
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
    stsh = !CURRENT=$(git symbolic-ref HEAD) && git symbolic-ref HEAD refs/heads/stash && git commit -a -m stashed && git checkout $CURRENT
    serve = daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
    prune-all = !git remote | xargs -n 1 git remote prune
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    intercommit = !sh -c 'git show "$1" > .git/commit1 && git show "$2" > .git/commit2 && interdiff .git/commit[12] | less -FRS' -
    sortdiff = !sh -c 'git diff "$@" | grep "^[+-]" | sort --key=1.2 | uniq -u -s1'
    edit-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; vim `f`"
    add-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; git add `f`"
    graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
    aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'
    send-mbox = "!bash -c 'eval f=\\$$#; eval set -- `seq -f\"\\$%.0f\" 1 $(($#-1))`; mkdir .mboxsplit || exit; trap \"st=\\$?; rm -rf .mboxsplit; exit \\$?\" 0 INT TERM; if last=`git mailsplit -d4 -o.mboxsplit -b -- \"$f\"`; then echo Found $last messages in \"$f\"; git send-email \"$@\" .mboxsplit; fi' -"
    abbr = "!sh -c 'git rev-list --all | grep ^$1 | while read commit; do git --no-pager log -n1 --pretty=format:\"%H %ci %an %s%n\" $commit; done' -"
    oneline ="!_() { $(test $# -eq 0 && echo xargs -L1) git log --no-walk --decorate --oneline \"$@\"; }; _"
    tips = "!_() { t=$(git rev-list --no-merges --max-count=1 \"$@\"); if test -n \"$t\"; then echo $t; _ \"$@\" ^$t; fi; }; _"
    fpaste = !sh -c 'git format-patch -1 -C -M1 --patience --stdout $1 | fpaste -l diff' -
    ar =archive --format=tar.gz  -o /tmp/git.tar.gz HEAD
    bigfiles=!git ls-tree -r -t -l --full-name HEAD | sort -n -k 4 | tail -n 10
    rmignfiles=!git rm --cached `git ls-files -i -X .gitignore`
    pg = !git add -A . && git commit -a && git push github master
[user]
	name = Amit Agarwal
	email = raj77in
